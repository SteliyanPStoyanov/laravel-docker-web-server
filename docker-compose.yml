version: '3.9'

networks:
  web:
    external: true
  internal:
    external: false

services:
  traefik:
    container_name: traefik
    image: traefik:v2.9
    ports:
      - "80:80"      # The HTTP port
      - "443:443"
      - "8080:8080"
      - "9900:9900"
      - "9901:9901"
    command:
      # Enable Hub communication (open the port 9900 and 9901 by default)
      # 02312c4a-6a98-4eb8-95ae-be498b84f9de
      - --providers.docker
      # Enable Hub communication (open the port 9900 and 9901 by default)
      - --experimental.hub=true
      - --metrics.prometheus.addrouterslabels=true
      # Path to the certificate authority which signed TLS credentials.
      - --traefik.tls.ca=/docker_files/proxy.traefik.localhost.pem
      # Path to the certificate (must have proxy.traefik domain name) used to communicate with Traefik Hub Agent.
      - --traefik.tls.cert=/docker_files/proxy.traefik.localhost.pem
      # Path to the key used to communicate with Traefik Hub Agent.
      - --traefik.tls.key=/docker_files/proxy.traefik.localhost.pem
      - --entrypoints.traefikhub-tunl.address=:9901
      - --entrypoints.traefikhub-api.address=:9900
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  # So that Traefik can listen to the Docker events
      - ./docker_files/traefik.toml:/etc/traefik/traefik.toml
      - ./docker_files/traefik_secure.toml:/etc/traefik/traefik_secure.toml
      - ./docker_files/cert:/etc/traefik/cert
      - ./docker_files/cert-key:/etc/traefik/cert-key
      - ./docker_files/ssl/:/etc/traefik/
    networks:
      web:
        ipv4_address: 172.20.0.2
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.api.entrypoints=websecure
      - traefik.http.routers.api.rule=Host(`traefik.localhost`)
      - traefik.http.routers.api.tls.options=default
      - traefik.http.routers.api.service=api@internal
    restart: always

  portainer:
    image: portainer/portainer-ce:2.18.4 # A container that exposes an API to show it's IP address
    container_name: portainer
    restart: always
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.portainer.entrypoints=websecure
      - traefik.http.routers.portainer.rule=Host(`portainer.localhost`)
      - traefik.http.routers.portainer.tls.options=default
      - traefik.http.services.portainer.loadbalancer.server.port=9000
    networks:
      web:
        ipv4_address: 172.20.0.8
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  db:
    image: mariadb:10.4.13
    container_name: mariadb
    hostname: mariadb
    mem_reservation: 4000M
    environment:
      - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}"
      - "MYSQL_USER=${MYSQL_USER}"
      - "MYSQL_PASSWORD=${MYSQL_PASSWORD}"
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker_files/database/backups:/var/tmp/backups
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.db.entrypoints=websecure
      - traefik.http.routers.db.rule=Host(`mariadb.localhost`)
      - traefik.http.routers.db.tls.options=default
      - traefik.http.services.db.loadbalancer.server.port=3306
    networks:
      web:
        ipv4_address: 172.20.0.3

  postgres:
    image: postgres
    container_name: postgres
    hostname: postgres
    environment:
      - "POSTGRES_DB=mkformater"
      - "POSTGRES_USER=test"
      - "POSTGRES_PASSWORD=test"
      - "PGDATA=/data/postgres-tuto"
    volumes:
      - postgres_data:/var/lib/postgres
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.postgres.entrypoints=websecure
      - traefik.http.routers.postgres.rule=Host(`postgres.localhost`)
      - traefik.http.routers.postgres.tls.options=default
      - traefik.http.services.postgres.loadbalancer.server.port=5432
    networks:
      web:
        ipv4_address: 172.20.0.27

  phpmyadmin:
    container_name: phpmyadmin
    build:
      context: .
      dockerfile: docker_files/phpmyadmin/Dockerfile
    links:
      - db
    restart: always
    volumes:
      - ./docker_files/phpmyadmin/darkwolf:/var/www/html/themes/darkwolf
      - ./docker_files/phpmyadmin/boodark:/var/www/html/themes/boodark
      - /sessions
      - ./docker_files/phpmyadmin/config.inc.php:/etc/phpmyadmin/config.inc.php
      - /var/run/mysqld/mysqld.sock:/tmp/mysqld.sock
    environment:
      UPLOAD_LIMIT: 4G
      POST_MAX_SIZE: 4G
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.phpmyadmin.entrypoints=websecure
      - traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.localhost`)
      - traefik.http.routers.phpmyadmin.tls.options=default
      - traefik.http.services.phpmyadmin.loadbalancer.server.port=80
    networks:
      web:
        ipv4_address: 172.20.0.9

  mailhog:
    image: mailhog/mailhog
    container_name: mailhog
    ports:
      - "1025:1025"      # The HTTP port
      - "8025:8025"
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.mailhog.entrypoints=websecure
      - traefik.http.routers.mailhog.rule=Host(`mailhog.localhost`)
      - traefik.http.routers.mailhog.tls.options=default
      - traefik.http.services.mailhog.loadbalancer.server.port=8025
    networks:
      web:
        ipv4_address: 172.20.0.5
    volumes:
      - mail-hog_data:/data

  redis:
    image: redis:alpine
    container_name: redis
    command: redis-server --appendonly yes --requirepass "password"
    volumes:
      - redis_data:/data
    ports:
      - "8002:6379"
    networks:
      web:
        ipv4_address: 172.20.0.4
        
  mongo:
    image: mongo
    container_name: mongo
    restart: always
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.mongo.entrypoints=websecure
      - traefik.http.routers.mongo.rule=Host(`mongo.localhost`)
      - traefik.http.routers.mongo.tls.options=default
      - traefik.http.services.mongo.loadbalancer.server.port=27017
    networks:
      web:
        ipv4_address: 172.20.0.10
        
  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: root
    labels:
      - traefik.enable=true
      - traefik.docker.network=web
      - traefik.http.routers.mongo-express.entrypoints=websecure
      - traefik.http.routers.mongo-express.rule=Host(`mongo-express.localhost`)
      - traefik.http.routers.mongo-express.tls.options=default
      - traefik.http.services.mongo-express.loadbalancer.server.port=8081
    networks:
      web:
        ipv4_address: 172.20.0.22

volumes:
  dbdata:
    driver: local
  portainer_data:
  mail-hog_data:
  certs:
  redis_data:
  mongo_data:
  postgres_data:
